{"ast":null,"code":"var _jsxFileName = \"/Users/phil/listing-eagle/components/ui/search/Search.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst Search = ({\n  query,\n  querySent,\n  onSearch\n}) => {\n  console.log(\"query: \", query);\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n  const {\n    0: fact,\n    1: setFact\n  } = useState({\n    items: [],\n    isLoaded: false\n  });\n\n  const handleChange = event => {\n    event.preventDefault();\n    setMessage(event.target.value); //console.log(\"value is:\", event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchQuery(event.target.queryField.value);\n    onSearch({\n      query: event.target.queryField.value,\n      querySent: querySent\n    });\n    newCatFact();\n  };\n\n  const newCatFact = () => {\n    fetch(\"https://catfact.ninja/fact\").then(res => res.json()).then(json => {\n      setFact({\n        items: json,\n        isLoaded: true\n      });\n      console.log(json.fact);\n    });\n  };\n  /*const ebayResponse = () => {\n    fetch(\n      \"https://svcs.ebay.com/services/search/FindingService/v1?OPERATION-NAME=findItemsByKeywords&SERVICE-VERSION=1.0.0&SECURITY-APPNAME=YourAppID&RESPONSE-DATA-FORMAT=XML&REST-PAYLOAD&keywords=harry%20potter%20phoenix\"\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n      });\n  };*/\n\n\n  const ebayResponse = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"X-EBAY-SOA-SECURITY-APPNAME\": \"PhilippB-Fiindii-SBX-df2241f4a-e35c32c6\",\n        \"X-EBAY-SOA-OPERATION-NAME\": \"findItemsByKeywords\"\n      } //body: JSON.stringify({ title: 'React POST Request Example' })\n\n    };\n    fetch(\"./ebay.xml\", requestOptions).then(res => res.json()).then(json => {\n      console.log(json);\n    });\n  };\n\n  ebayResponse();\n  return __jsx(\"div\", {\n    className: \"topnav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"query: \", query), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"searchQuery: \", searchQuery), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"cat fact: \", fact.items.fact), __jsx(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    id: \"queryField\",\n    type: \"text\",\n    placeholder: \"Search..\",\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/phil/listing-eagle/components/ui/search/Search.js"],"names":["React","useState","Search","query","querySent","onSearch","console","log","message","setMessage","searchQuery","setSearchQuery","fact","setFact","items","isLoaded","handleChange","event","preventDefault","target","value","handleSubmit","queryField","newCatFact","fetch","then","res","json","ebayResponse","requestOptions","method","headers","e"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst Search = ({ query, querySent, onSearch }) => {\n  console.log(\"query: \", query);\n  const [message, setMessage] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [fact, setFact] = useState({\n    items: [],\n    isLoaded: false,\n  });\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setMessage(event.target.value);\n\n    //console.log(\"value is:\", event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSearchQuery(event.target.queryField.value);\n    onSearch({ query: event.target.queryField.value, querySent: querySent });\n    newCatFact();\n  };\n\n  const newCatFact = () => {\n    fetch(\"https://catfact.ninja/fact\")\n      .then((res) => res.json())\n      .then((json) => {\n        setFact({\n          items: json,\n          isLoaded: true,\n        });\n        console.log(json.fact);\n      });\n  };\n\n  /*const ebayResponse = () => {\n    fetch(\n      \"https://svcs.ebay.com/services/search/FindingService/v1?OPERATION-NAME=findItemsByKeywords&SERVICE-VERSION=1.0.0&SECURITY-APPNAME=YourAppID&RESPONSE-DATA-FORMAT=XML&REST-PAYLOAD&keywords=harry%20potter%20phoenix\"\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n      });\n  };*/\n\n  const ebayResponse = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"X-EBAY-SOA-SECURITY-APPNAME\":\n          \"PhilippB-Fiindii-SBX-df2241f4a-e35c32c6\",\n        \"X-EBAY-SOA-OPERATION-NAME\": \"findItemsByKeywords\",\n      },\n      //body: JSON.stringify({ title: 'React POST Request Example' })\n    };\n\n    fetch(\"./ebay.xml\", requestOptions)\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n      });\n  };\n\n  ebayResponse();\n\n  return (\n    <div className=\"topnav\">\n      <h1>query: {query}</h1>\n      <h1>searchQuery: {searchQuery}</h1>\n      <h1>cat fact: {fact.items.fact}</h1>\n\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <input\n          id=\"queryField\"\n          type=\"text\"\n          placeholder=\"Search..\"\n          onChange={(e) => handleChange(e)}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}