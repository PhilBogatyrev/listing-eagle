{"ast":null,"code":"var _jsxFileName = \"/Users/phil/listing-eagle/components/ui/search/Search.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst Search = ({\n  query,\n  querySent,\n  onSearch\n}) => {\n  console.log(\"query: \", query);\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n\n  const handleChange = event => {\n    event.preventDefault();\n    setMessage(event.target.value); //console.log(\"value is:\", event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchQuery(event.target.queryField.value);\n    onSearch({\n      query: event.target.queryField.value,\n      querySent: querySent\n    });\n  };\n\n  async function getCatFacts() {\n    // fetch the blog posts from the mock API\n    const res = await fetch(\"https://catfact.ninja/fact\");\n    const posts = await res.json();\n    console.log(posts);\n    return posts;\n    /*return {\n      props: { posts }, // props will be passed to the page\n    };*/\n  }\n\n  return __jsx(\"div\", {\n    className: \"topnav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"query: \", query), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"searchQuery: \", searchQuery), __jsx(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    id: \"queryField\",\n    type: \"text\",\n    placeholder: \"Search..\",\n    onChange: e => handleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/phil/listing-eagle/components/ui/search/Search.js"],"names":["React","useState","Search","query","querySent","onSearch","console","log","message","setMessage","searchQuery","setSearchQuery","handleChange","event","preventDefault","target","value","handleSubmit","queryField","getCatFacts","res","fetch","posts","json","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAD,KAAoC;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB;AACA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACS,WAAD;AAAA,OAAcC;AAAd,MAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,UAAU,CAACI,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAV,CAF8B,CAI9B;AACD,GALD;;AAOA,QAAMC,YAAY,GAAIJ,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,cAAc,CAACE,KAAK,CAACE,MAAN,CAAaG,UAAb,CAAwBF,KAAzB,CAAd;AACAX,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,KAAK,EAAEU,KAAK,CAACE,MAAN,CAAaG,UAAb,CAAwBF,KAAjC;AAAwCZ,MAAAA,SAAS,EAAEA;AAAnD,KAAD,CAAR;AACD,GAJD;;AAMA,iBAAee,WAAf,GAA6B;AAC3B;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAAvB;AACA,UAAMC,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB;AAEAjB,IAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACA,WAAOA,KAAP;AAEA;;;AAGD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYnB,KAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBO,WAAlB,CAFF,EAIE;AAAM,IAAA,QAAQ,EAAGc,CAAD,IAAOP,YAAY,CAACO,CAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,QAAQ,EAAGA,CAAD,IAAOZ,YAAY,CAACY,CAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAeD,CA7CD;;AA+CA,eAAetB,MAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst Search = ({ query, querySent, onSearch }) => {\n  console.log(\"query: \", query);\n  const [message, setMessage] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    setMessage(event.target.value);\n\n    //console.log(\"value is:\", event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSearchQuery(event.target.queryField.value);\n    onSearch({ query: event.target.queryField.value, querySent: querySent });\n  };\n\n  async function getCatFacts() {\n    // fetch the blog posts from the mock API\n    const res = await fetch(\"https://catfact.ninja/fact\");\n    const posts = await res.json();\n\n    console.log(posts);\n    return posts;\n\n    /*return {\n      props: { posts }, // props will be passed to the page\n    };*/\n  }\n  return (\n    <div className=\"topnav\">\n      <h1>query: {query}</h1>\n      <h1>searchQuery: {searchQuery}</h1>\n\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <input\n          id=\"queryField\"\n          type=\"text\"\n          placeholder=\"Search..\"\n          onChange={(e) => handleChange(e)}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}